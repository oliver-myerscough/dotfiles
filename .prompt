#!/bin/bash

# Colours for prompt, courtesy of archwiki
# Reset
Color_Off='\[\e[0m\]'       # Text Reset

# Regular Colors
Black='\[\e[0;30m\]'        # Black
Red='\[\e[0;31m\]'          # Red
Green='\[\e[0;32m\]'        # Green
Yellow='\[\e[0;33m\]'       # Yellow
Blue='\[\e[0;34m\]'         # Blue
Purple='\[\e[0;35m\]'       # Purple
Cyan='\[\e[0;36m\]'         # Cyan
White='\[\e[0;37m\]'        # White

# Bold
BBlack='\[\e[1;30m\]'       # Black
BRed='\[\e[1;31m\]'         # Red
BGreen='\[\e[1;32m\]'       # Green
BYellow='\[\e[1;33m\]'      # Yellow
BBlue='\[\e[1;34m\]'        # Blue
BPurple='\[\e[1;35m\]'      # Purple
BCyan='\[\e[1;36m\]'        # Cyan
BWhite='\[\e[1;37m\]'       # White

# Underline
UBlack='\[\e[4;30m\]'       # Black
URed='\[\e[4;31m\]'         # Red
UGreen='\[\e[4;32m\]'       # Green
UYellow='\[\e[4;33m\]'      # Yellow
UBlue='\[\e[4;34m\]'        # Blue
UPurple='\[\e[4;35m\]'      # Purple
UCyan='\[\e[4;36m\]'        # Cyan
UWhite='\[\e[4;37m\]'       # White

# Background
On_Black='\[\e[40m\]'       # Black
On_Red='\[\e[41m\]'         # Red
On_Green='\[\e[42m\]'       # Green
On_Yellow='\[\e[43m\]'      # Yellow
On_Blue='\[\e[44m\]'        # Blue
On_Purple='\[\e[45m\]'      # Purple
On_Cyan='\[\e[46m\]'        # Cyan
On_White='\[\e[47m\]'       # White

# High Intensity
IBlack='\[\e[0;90m\]'       # Black
IRed='\[\e[0;91m\]'         # Red
IGreen='\[\e[0;92m\]'       # Green
IYellow='\[\e[0;93m\]'      # Yellow
IBlue='\[\e[0;94m\]'        # Blue
IPurple='\[\e[0;95m\]'      # Purple
ICyan='\[\e[0;96m\]'        # Cyan
IWhite='\[\e[0;97m\]'       # White

# Bold High Intensity
BIBlack='\[\e[1;90m\]'      # Black
BIRed='\[\e[1;91m\]'        # Red
BIGreen='\[\e[1;92m\]'      # Green
BIYellow='\[\e[1;93m\]'     # Yellow
BIBlue='\[\e[1;94m\]'       # Blue
BIPurple='\[\e[1;95m\]'     # Purple
BICyan='\[\e[1;96m\]'       # Cyan
BIWhite='\[\e[1;97m\]'      # White

# High Intensity backgrounds
On_IBlack='\[\e[0;100m\]'   # Black
On_IRed='\[\e[0;101m\]'     # Red
On_IGreen='\[\e[0;102m\]'   # Green
On_IYellow='\[\e[0;103m\]'  # Yellow
On_IBlue='\[\e[0;104m\]'    # Blue
On_IPurple='\[\e[0;105m\]'  # Purple
On_ICyan='\[\e[0;106m\]'    # Cyan
On_IWhite='\[\e[0;107m\]'   # White


# awesome prompt

prompt_gitline=""

function git_test
{
  count="$(echo "$3" | grep -o "$1" | wc -l)"
  test $count != "0" && echo -n "$count $2 "
}

function PROMPT_git_status_func
{

  git_status=$(git status -s 2> /dev/null)
  test $? != 0 && exit 0

  git_branch=$(git branch | grep "\*" | cut -c 3-)

  echo -n "$git_branch: "
  git_test '^ M' "modified" "$git_status"
  git_test '^ A' "added" "$git_status"
  git_test '^ D' "deleted" "$git_status"
  git_test '^ R' "renamed" "$git_status"
  git_test '^ C' "created" "$git_status"
  git_test '^ U' "unmerged" "$git_status"
  git_test '^??' "untracked" "$git_status"
  echo " "
}


function prompt_git
{

  prompt_gitline=""

  function check_type
  {
    count="$(echo "$3" | grep -o "$1" | wc -l)"
    test $count != "0" && prompt_gitline="$prompt_gitline$count $2 "
  }

  git_status=$(git status -s 2> /dev/null)

  if [ $? = 0 ]; then
    prompt_gitline="$prompt_gitline$(git branch | grep "\*" | cut -c 3-) "

    check_type '^ M' "modified" "$git_status"
    check_type '^ A' "added" "$git_status"
    check_type '^ D' "deleted" "$git_status"
    check_type '^ R' "renamed" "$git_status"
    check_type '^ C' "created" "$git_status"
    check_type '^ U' "unmerged" "$git_status"
    check_type '^??' "untracked" "$git_status"
  fi

  prompt_gitline="$prompt_gitline"
  
  # use echo -e to process escape sequences
  prompt_gitline=$(echo -e $prompt_gitline)
}

function rebuild_prompt 
{

  #check_last

  prompt_git

}


PROMPT_git_status="echo \$(PROMPT_git_status_func)"

export PROMPT_COMMAND=rebuild_prompt

#On_Blue=""
#On_White=""
#On_Red=""
#Color_Off=""
#IBlue=""

export PS1="\u@\h \w $Red\$prompt_gitline$Color_Off "


